{
    "name": "dryer-lint",
    "displayName": "Dryer Lint",
    "publisher": "pwintz",
    "description": "Regex-based linting for any language. Based on relint by n0brain3r.",
    "icon": "assets/dryer_lint_icon.png",
    "version": "1.3.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/pwintz/dryer-lint.git"
    },
    "bugs": {
        "url": "https://github.com/pwintz/dryer-lint/issues"
    },
    "license": "MIT",
    "pricing": "Free",
    "keywords": [
        "productivity",
        "visual studio code",
        "rules",
        "linter",
        "regex"
    ],
    "categories": [
        "Linters"
    ],
    "engines": {
        "vscode": "^1.98.0"
    },
    "activationEvents": [
        "onLanguage",
        "onEditSession:file"
    ],
    "contributes": {
        "commands": [
            {
                "command": "dryerLint.fixAllInActiveFile",
                "title": "Dryer Lint: Fix All"
            }
        ],
        "configuration": {
            "title": "dryerLint",
            "properties": {
                "dryerLint.ruleSets": {
                    "type": "array",
                    "description": "Contains a list of Dryer Lint rule sets for defining groups of linting rules in different languages.",
                    "items": {
                        "required": [
                            "name",
                            "language",
                            "rules"
                        ],
                        "properies": {
                            "name": {
                                "type": "string",
                                "description": "Name of the rule set."
                            },
                            "language": {
                                "type": [
                                    "string",
                                    "array"
                                ],
                                "minLength": 1,
                                "description": "The programming language(s) the rule set applies to."
                            },
                            "glob": {
                                "type": [
                                    "string"
                                ],
                                "description": "A file glob to select which files to apply this rule set to."
                            },
                            "rules": {
                                "type": "array",
                                "description": "List of Dryer Lint rules.",
                                "items": {
                                    "required": [
                                        "name",
                                        "pattern"
                                    ],
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "A concise name for the rule."
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "A regular expression pattern to match a rule violation."
                                        },
                                        "maxLines": {
                                            "type": "integer",
                                            "default": 1,
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of lines the pattern matches at a time. The default is 1."
                                        },
                                        "message": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "The message to print when a rule violation is found (optional). If no message is provided, the rules name is used."
                                        },
                                        "severity": {
                                            "type": "string",
                                            "enum": [
                                                "Error",
                                                "Warning",
                                                "Information",
                                                "Hint"
                                            ],
                                            "default": "Warning",
                                            "description": "Severity of the diagnostic to display."
                                        },
                                        "fix": {
                                            "type": "string",
                                            "description": "The replacement fix to apply. Substitution tokens starting with `$` can be used ($0 is the matched text, $1 is the first capture group, and so on)."
                                        },
                                        "caseInsensitive": {
                                            "type": "boolean",
                                            "default": false,
                                            "description": "Enable case insensitive Regex matching, to ignore capitalization."
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "dryer-lint": {
                    "type": "object",
                    "required": [
                        "rules"
                    ],
                    "deprecationMessage": "Deprecated: dryerLint.ruleSets instead.",
                    "properties": {
                        "language": {
                            "type": [
                                "string",
                                "array"
                            ],
                            "default": "plaintext",
                            "minLength": 1,
                            "description": "The default programming language(s) the rules apply to."
                        },
                        "rules": {
                            "type": "array",
                            "minItems": 1,
                            "default": [],
                            "items": {
                                "required": [
                                    "name",
                                    "pattern",
                                    "message"
                                ],
                                "properties": {
                                    "language": {
                                        "type": [
                                            "string",
                                            "array"
                                        ],
                                        "default": "plaintext",
                                        "minLength": 1,
                                        "description": "The programming language(s) the rule applies to."
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "A concise name for the rule."
                                    },
                                    "pattern": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "A regular expression pattern to match a rule violation."
                                    },
                                    "maxLines": {
                                        "type": "integer",
                                        "default": 1,
                                        "exclusiveMinimum": -1,
                                        "description": "The maximum number of lines the pattern matches at a time. The default is 1 for `replace` fixes, and 0 for `reorder` fixes."
                                    },
                                    "message": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "The message to print when a rule violation is found."
                                    },
                                    "severity": {
                                        "type": "string",
                                        "enum": [
                                            "Error",
                                            "Warning",
                                            "Information",
                                            "Hint"
                                        ],
                                        "default": "Warning",
                                        "description": "Severity of the diagnostic to display."
                                    },
                                    "fix": {
                                        "type": "string",
                                        "description": "The fix to apply. Substitution tokens starting with `$` can be used."
                                    },
                                    "caseInsensitive": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Enable case insensitive Regex matching, to ignore capitalization."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "main": "out/extension.js",
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "lint": "eslint src",
        "test": "vscode-test"
    },
    "dependencies": {
        "@types/vscode": "^1.98.0",
        "glob": "^11.0.1",
        "@types/is-glob": "^4.0.3"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.10",
        "@types/node": "^22.13.10",
        "@types/vscode": "^1.98.0",
        "@typescript-eslint/eslint-plugin": "^8.28.0",
        "@typescript-eslint/parser": "^8.28.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1",
        "@vscode/vsce": "^3.3.0",
        "eslint": "^9.23.0",
        "ts-loader": "^9.5.2",
        "typescript": "^5.8.2",
        "webpack": "^5.98.0",
        "webpack-cli": "^6.0.1"
    }
}
